-- USERS TABLE
CREATE TABLE users (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Auto-increment primary key
    name VARCHAR2(100) NOT NULL, -- Name column
    email VARCHAR2(100) NOT NULL UNIQUE, -- Unique email constraint
    password VARCHAR2(255) NOT NULL, -- Password column
    phone VARCHAR2(20), -- Phone column
    role VARCHAR2(20) DEFAULT 'Customer' CHECK (role IN ('Admin', 'Customer')), -- Role with default and check constraint
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP, -- Default timestamp for creation
    updated_at TIMESTAMP DEFAULT SYSTIMESTAMP -- Default timestamp for updates
);

-- ROOMS TABLE
CREATE TABLE rooms (
    room_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Auto-increment primary key
    name VARCHAR2(100) NOT NULL, -- Name column
    description VARCHAR2(500), -- Room description
    price NUMBER(10, 2) NOT NULL, -- Room price
    availability NUMBER(1) DEFAULT 1, -- Availability: 1 (true), 0 (false)
    image VARCHAR2(255), -- Image URL
    room_type VARCHAR2(50) -- Room type
);

-- FEATURED ROOMS TABLE
CREATE TABLE featured_rooms (
    featured_room_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Auto-increment primary key
    room_id NUMBER NOT NULL REFERENCES rooms(room_id) ON DELETE CASCADE -- Foreign key to rooms table
);

-- ACTIVITIES TABLE
CREATE TABLE activities (
    activity_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Auto-increment primary key
    name VARCHAR2(100) NOT NULL, -- Activity name
    description VARCHAR2(500), -- Activity description
    price NUMBER(10, 2) NOT NULL, -- Activity price
    image VARCHAR2(255) -- Image URL
);

-- FEATURED ACTIVITIES TABLE
CREATE TABLE featured_activities (
    featured_activity_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Auto-increment primary key
    activity_id NUMBER NOT NULL REFERENCES activities(activity_id) ON DELETE CASCADE -- Foreign key to activities table
);

-- BOOKINGS TABLE
CREATE TABLE bookings (
    booking_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Auto-increment primary key
    user_id NUMBER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE, -- Foreign key to users table
    room_id NUMBER NOT NULL REFERENCES rooms(room_id) ON DELETE CASCADE, -- Foreign key to rooms table
    check_in DATE NOT NULL, -- Check-in date
    check_out DATE NOT NULL, -- Check-out date
    total_price NUMBER(10, 2) NOT NULL -- Total price for the booking
);

-- REVIEWS TABLE
CREATE TABLE reviews (
    review_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Auto-increment primary key
    user_id NUMBER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE, -- Foreign key to users table
    room_id NUMBER NOT NULL REFERENCES rooms(room_id) ON DELETE CASCADE, -- Foreign key to rooms table
    rating NUMBER(1) CHECK (rating BETWEEN 1 AND 5) NOT NULL, -- Rating between 1 and 5
    review_text VARCHAR2(500), -- Review text
    review_date TIMESTAMP DEFAULT SYSTIMESTAMP -- Review date
);

-- FEATURED REVIEWS TABLE
CREATE TABLE featured_reviews (
    featured_review_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Auto-increment primary key
    review_id NUMBER NOT NULL REFERENCES reviews(review_id) ON DELETE CASCADE -- Foreign key to reviews table
);

-- HOMEPAGE HEADER TABLE
CREATE TABLE homepage_header (
    header_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Auto-increment primary key
    image VARCHAR2(255) NOT NULL, -- Header image URL
    overlay_text VARCHAR2(255) -- Overlay text
);

-- RELATIONSHIPS AND INDEXES
-- Create index for bookings by user_id
CREATE INDEX idx_booking_user_id ON bookings(user_id);

-- Create index for reviews by room_id
CREATE INDEX idx_review_room_id ON reviews(room_id);

-- Create index for featured rooms by room_id
CREATE INDEX idx_featured_room_room_id ON featured_rooms(room_id);

-- Create index for featured activities by activity_id
CREATE INDEX idx_featured_activity_activity_id ON featured_activities(activity_id);

-- Create index for featured reviews by review_id
CREATE INDEX idx_featured_review_review_id ON featured_reviews(review_id);

-- Create index for homepage header image
CREATE INDEX idx_homepage_header_image ON homepage_header(image);
